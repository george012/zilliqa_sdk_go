# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go build

env:
  ProductName: zilliqa_sdk_go

on:
  push:
    tags:
      - 'v*'

jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: GitHub Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  Build:
    runs-on: ubuntu-latest
    needs: CreateRelease
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: CheckOut
        uses: actions/checkout@v3

      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}

      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}

      - name: Environment Printer
        uses: managedkaos/print-env@v1.0

      - name: GO Release
        uses: wangyoucao577/go-release-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_flags: -v
          overwrite: true
          ldflags: -X "${{ env.ProductName }}.appVersion=${{ env.APP_VERSION }}" -X "${{ env.ProductName }}.buildTime=${{ env.BUILD_TIME }}" -X ${{ env.ProductName }}.gitCommit=${{ github.sha }} -X ${{ env.ProductName }}.gitRef=${{ github.ref }}

  RemoveOldRelease:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: install github-cli
        run: |
          type -p curl >/dev/null || sudo apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: CheckOut
        uses: actions/checkout@v3

      - name: Set APP_VERSION env
        run: |
          APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) \
          && echo APP_OLD_VERSION=${APP_VERSION%.*}.$((${APP_VERSION##*.}-2)) >> ${GITHUB_ENV}

      - name: Remove Old Release
        run: |
          gh release delete ${{ env.APP_OLD_VERSION }} -y
          git push origin --delete ${{ env.APP_OLD_VERSION }}
        env:
          GH_TOKEN: ${{ github.token }}